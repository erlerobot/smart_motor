Archive member included to satisfy reference by file (symbol)

c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
                              bootloader.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

bootloader_active   0x1               bootloader.o
bootloader_exit     0x1               bootloader.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
Address of section .bootloader set to 0x7000
LOAD bootcrt.o
LOAD bootstart.o
LOAD bootloader.o
LOAD main.o
LOAD prog.o
LOAD twi.o
START GROUP
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/../../../../avr/lib/avr5\libm.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/../../../../avr/lib/avr5\libatmega328.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x370
 *(.vectors)
 .vectors       0x00000000        0x4 bootcrt.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x00000004                . = ALIGN (0x2)
                0x00000004                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000004        0x0 linker stubs
 *(.trampolines*)
                0x00000004                __trampolines_end = .
 *(.progmem*)
                0x00000004                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000004                __ctors_start = .
 *(.ctors)
                0x00000004                __ctors_end = .
                0x00000004                __dtors_start = .
 *(.dtors)
                0x00000004                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000004        0x0 bootcrt.o
                0x00000004                __init
                0x00000004                __boot_start
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000004        0xc bootcrt.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000010       0x10 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
                0x00000010                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000020        0x4 bootcrt.o
 *(.init9)
 *(.text)
 .text          0x00000024        0x4 bootcrt.o
                0x00000024                __bad_interrupt
 .text          0x00000028        0x0 bootstart.o
 .text          0x00000028        0x0 bootloader.o
 .text          0x00000028        0x0 main.o
 .text          0x00000028      0x1cc prog.o
                0x00000028                prog_init
                0x0000003e                prog_buffer_set_address
                0x000000da                prog_buffer_get_byte
                0x00000108                prog_buffer_set_byte
                0x0000013c                prog_buffer_update
 .text          0x000001f4       0xfc twi.o
                0x000001f4                twi_init
                0x00000214                twi_deinit
                0x00000222                twi_handle_interrupt_condition
                0x000002e4                twi_check_conditions
 .text          0x000002f0        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
                0x000002f0                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000002f0       0x80 bootloader.o
                0x000002f0                main
 .text.libgcc.mul
                0x00000370        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000370        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000370        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000370        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000370        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000370        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000370        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
                0x00000370                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x00000370                _etext = .

.data           0x00800100        0x0 load address 0x00000370
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 bootcrt.o
 .data          0x00800100        0x0 bootstart.o
 .data          0x00800100        0x0 bootloader.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 prog.o
 .data          0x00800100        0x0 twi.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x8a
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 bootcrt.o
 .bss           0x00800100        0x0 bootstart.o
 .bss           0x00800100        0x0 bootloader.o
 .bss           0x00800100        0x0 main.o
 .bss           0x00800100       0x85 prog.o
 .bss           0x00800185        0x3 twi.o
 .bss           0x00800188        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.9.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800188        0x2 bootloader.o
                0x00800188                bootloader_active
                0x00800189                bootloader_exit
                0x0080018a                PROVIDE (__bss_end, .)
                0x00000370                __data_load_start = LOADADDR (.data)
                0x00000370                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080018a        0x0
                0x0080018a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080018a                PROVIDE (__noinit_end, .)
                0x0080018a                _end = .
                0x0080018a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 bootloader.o
                                 0x31 (size before relaxing)
 .comment       0x00000030       0x31 main.o
 .comment       0x00000030       0x31 prog.o
 .comment       0x00000030       0x31 twi.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x38
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x38 bootcrt.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000       0x76
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0x76 bootcrt.o

.debug_abbrev   0x00000000       0x12
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x12 bootcrt.o

.debug_line     0x00000000       0x6a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000       0x6a bootcrt.o

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x30
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x30 bootcrt.o

.debug_macro
 *(.debug_macro)
OUTPUT(ATmega328_Bootloader.elf elf32-avr)
LOAD linker stubs

.bootloader     0x00007000        0x0
